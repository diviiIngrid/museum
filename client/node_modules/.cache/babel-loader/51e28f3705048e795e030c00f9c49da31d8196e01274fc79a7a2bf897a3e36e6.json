{"ast":null,"code":"import{$host,$authHost}from'./index';import{jwtDecode as jwt_decode}from'jwt-decode';// регистрация нового пользователя\nexport const registration=async(name,email,password)=>{const{data}=await $host.post('user/registration',{name,email,password});localStorage.setItem('token',data.token);return jwt_decode(data.token);};// вход пользователя\nexport const login=async(email,password)=>{const{data}=await $host.post('user/login',{email,password});localStorage.setItem('token',data.token);return jwt_decode(data.token);};// проверка действительности токена\nexport const check=async()=>{const{data}=await $authHost.get('user/auth');localStorage.setItem('token',data.token);return jwt_decode(data.token);};// получение информации о текущем пользователе\nexport const getProfile=async()=>{const{data}=await $authHost.get('user/profile');return data;};// обновления профиля пользователя\nexport const updateProfile=async profile=>{const{data}=await $authHost.put('user/profile',profile);return data;};","map":{"version":3,"names":["$host","$authHost","jwtDecode","jwt_decode","registration","name","email","password","data","post","localStorage","setItem","token","login","check","get","getProfile","updateProfile","profile","put"],"sources":["C:/Users/admin/Desktop/mmuseum/client/src/http/userAPI.js"],"sourcesContent":["import { $host, $authHost } from './index';\nimport { jwtDecode as jwt_decode } from 'jwt-decode';\n// регистрация нового пользователя\nexport const registration = async (name, email, password) => {\n  const { data } = await $host.post('user/registration', { name, email, password });\n  localStorage.setItem('token', data.token);\n  return jwt_decode(data.token);\n};\n// вход пользователя\nexport const login = async (email, password) => {\n  const { data } = await $host.post('user/login', { email, password });\n  localStorage.setItem('token', data.token);\n  return jwt_decode(data.token);\n};\n// проверка действительности токена\nexport const check = async () => {\n  const { data } = await $authHost.get('user/auth');\n  localStorage.setItem('token', data.token);\n  return jwt_decode(data.token);\n};\n// получение информации о текущем пользователе\nexport const getProfile = async () => {\n  const { data } = await $authHost.get('user/profile');\n  return data;\n};\n// обновления профиля пользователя\nexport const updateProfile = async (profile) => {\n  const { data } = await $authHost.put('user/profile', profile);\n  return data;\n};\n  "],"mappings":"AAAA,OAASA,KAAK,CAAEC,SAAS,KAAQ,SAAS,CAC1C,OAASC,SAAS,GAAI,CAAAC,UAAU,KAAQ,YAAY,CACpD;AACA,MAAO,MAAM,CAAAC,YAAY,CAAG,KAAAA,CAAOC,IAAI,CAAEC,KAAK,CAAEC,QAAQ,GAAK,CAC3D,KAAM,CAAEC,IAAK,CAAC,CAAG,KAAM,CAAAR,KAAK,CAACS,IAAI,CAAC,mBAAmB,CAAE,CAAEJ,IAAI,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAAC,CACjFG,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEH,IAAI,CAACI,KAAK,CAAC,CACzC,MAAO,CAAAT,UAAU,CAACK,IAAI,CAACI,KAAK,CAAC,CAC/B,CAAC,CACD;AACA,MAAO,MAAM,CAAAC,KAAK,CAAG,KAAAA,CAAOP,KAAK,CAAEC,QAAQ,GAAK,CAC9C,KAAM,CAAEC,IAAK,CAAC,CAAG,KAAM,CAAAR,KAAK,CAACS,IAAI,CAAC,YAAY,CAAE,CAAEH,KAAK,CAAEC,QAAS,CAAC,CAAC,CACpEG,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEH,IAAI,CAACI,KAAK,CAAC,CACzC,MAAO,CAAAT,UAAU,CAACK,IAAI,CAACI,KAAK,CAAC,CAC/B,CAAC,CACD;AACA,MAAO,MAAM,CAAAE,KAAK,CAAG,KAAAA,CAAA,GAAY,CAC/B,KAAM,CAAEN,IAAK,CAAC,CAAG,KAAM,CAAAP,SAAS,CAACc,GAAG,CAAC,WAAW,CAAC,CACjDL,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEH,IAAI,CAACI,KAAK,CAAC,CACzC,MAAO,CAAAT,UAAU,CAACK,IAAI,CAACI,KAAK,CAAC,CAC/B,CAAC,CACD;AACA,MAAO,MAAM,CAAAI,UAAU,CAAG,KAAAA,CAAA,GAAY,CACpC,KAAM,CAAER,IAAK,CAAC,CAAG,KAAM,CAAAP,SAAS,CAACc,GAAG,CAAC,cAAc,CAAC,CACpD,MAAO,CAAAP,IAAI,CACb,CAAC,CACD;AACA,MAAO,MAAM,CAAAS,aAAa,CAAG,KAAO,CAAAC,OAAO,EAAK,CAC9C,KAAM,CAAEV,IAAK,CAAC,CAAG,KAAM,CAAAP,SAAS,CAACkB,GAAG,CAAC,cAAc,CAAED,OAAO,CAAC,CAC7D,MAAO,CAAAV,IAAI,CACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}